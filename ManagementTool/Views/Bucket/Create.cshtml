@model ManagementTool.Models.C004_BUCKET

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<br />
<div class="row">

    <div class="col-lg-10 col-lg-offset-1">
        <div class="ibox float-e-margins">
            <div class="ibox-title">
                <h5>Add new Bucket</h5>
                <div class="ibox-tools">
                    <a class="collapse-link">
                        <i class="fa fa-chevron-up"></i>
                    </a>
                    <a class="close-link">
                        <i class="fa fa-times"></i>
                    </a>
                </div>
            </div>
            <div class="ibox-content">
                <div class="table-responsive">
                    @using (Html.BeginForm("Create", "Bucket", FormMethod.Post, new { id = "frmMain" }))
                    {
                        @Html.AntiForgeryToken();


                    <!-- / Select Project -->
                        <div class="form-group">
                            <label class="col-lg-3 control-label">Select Project</label>
                            <div class="col-lg-9">
                                @Html.DropDownList("ProjectId", null, "Select Project", htmlAttributes: new { @class = "form-control m-b", onchange = "FillPhase(this);" })
                            </div>
                        </div>

                        <!-- / Select Phase -->
                        <div class="form-group">
                            <label class="col-lg-3 control-label">Select Phase</label>
                            <div class="col-lg-9">
                                @Html.DropDownList("PhaseId", null, "Select Phase", htmlAttributes: new { @class = "form-control m-b", onchange = "FillSubPhase(this);" })
                            </div>
                        </div>

                    <!-- /Sub Phase Name -->
                        <div class="form-group">
                            <label class="col-lg-3 control-label">Select Sub Phase</label>
                            <div class="col-lg-9">
                                @Html.DropDownList("SubPhaseId", null, "Select Sub Phase", htmlAttributes: new { @class = "form-control m-b" })
                            </div>
                        </div>

                    <!-- /Bucket -->
                        <div class="form-group">
                            <label class="col-lg-3 control-label">New Bucket Name</label>
                            <div class="col-lg-9">
                                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control m-b", placeholder = "Bucket Name" } })
                            </div>
                        </div>

                    <!-- / Save Button -->
                        <div class="form-group">
                            <div class="col-lg-12">
                                <button class="btn btn-sm btn-primary pull-left m-t-n-xs" type="submit">
                                    <strong>Save</strong>
                                </button>

                                @Html.ActionLink("Back to List", "Index", null, htmlAttributes: new { @class = "btn btn-sm btn-primary pull-right m-t-n-xs" })
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>



<script type="text/javascript">

    $(document).ready(
    function () {
        $('#StartDate').datepicker({
            changeMonth: true,
            changeYear: true,
            minDate: "-15w",
            dateFormat: "dd-M-yy" /*format: 'dd-M-yyyy'*/
        });

        $('#EndDate').datepicker({
            changeMonth: true,
            changeYear: true,
            numberOfMonths: 1,
            dateFormat: "dd-M-yy"
        });

        $("#frmMain").validate({
            rules: {
                BucketName: {
                    minlength: 3,
                    maxlength: 250,
                    required: true
                },
                SubPhaseId: { required: true },
                PhaseId: { required: true },
                ProjectId: { required: true },

            },
            highlight: function (element) {
                $(element).closest('.control-group').addClass('has-error');
            },
            unhighlight: function (element) {
                $(element).closest('.control-group').removeClass('has-error');
            },
            submitHandler: function (form) { // for demo
                form.submit();
                return false;
            }
        });
    });

    function FillPhase(obj) {
        var sel = obj.options[obj.selectedIndex].value;
        if (sel == "") { return; }

        var postedContent = { SelectedLocation: sel }
        $.ajax({
            type: "POST",
            url: "/Bucket/GetPhaseByProject",
            data: postedContent,
            success: function (message) {
                var res = message.data;
                if (res.length > 0) {
                    $("#PhaseId").empty()
                    for (var i = 0; i < message.data.length; i++) {
                        $('#PhaseId').append($('<option>', { value: message.data[i].PhaseId, text: message.data[i].PhaseName }));
                    } // end of for loop
                } // end of if for length
            },
            error: function (xerr) {
                /* $('#txteng').val("err : " +xerr);*/
            }
        });

    }

    function FillSubPhase(obj) {
        var sel = obj.options[obj.selectedIndex].value;
        if (sel == "") { return; }

        var postedContent = { SelectedLocation: sel }
        $.ajax({
            type: "POST",
            url: "/Bucket/GetSubPhaseByPhase",
            data: postedContent,
            success: function (message) {
                var res = message.data;
                if (res.length > 0) {
                    $("#SubPhaseId").empty()
                    for (var i = 0; i < message.data.length; i++) {
                        $('#SubPhaseId').append($('<option>', { value: message.data[i].SubPhaseId, text: message.data[i].SubPhaseName }));
                    } // end of for loop
                } // end of if for length
            },
            error: function (xerr) {
                /* $('#txteng').val("err : " +xerr);*/
            }
        });

    }




</script>

