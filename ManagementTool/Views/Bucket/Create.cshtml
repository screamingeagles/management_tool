@model ManagementTool.Models.C007_BUCKET

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<br />
<div class="row">

    <div class="col-lg-10 col-lg-offset-1">
        <div class="ibox float-e-margins">
            <div class="ibox-title">
                <h5>Add New Bucket</h5>
                <div class="ibox-tools">
                    <a class="collapse-link">
                        <i class="fa fa-chevron-up"></i>
                    </a>
                    <a class="close-link">
                        <i class="fa fa-times"></i>
                    </a>
                </div>
            </div>
            <div class="ibox-content">
                <div class="table-responsive">
                    @using (Html.BeginForm("Create", "Bucket", FormMethod.Post, new { id = "frmMain" }))
                    {
                        @Html.AntiForgeryToken();

                        <!-- / Project Name -->
                        <div class="form-group">
                            <label class="col-lg-3 control-label">Select Project</label>
                            <div class="col-lg-9">
                                @Html.DropDownList("ProjectId", null, "Select Project", htmlAttributes: new { @class = "form-control m-b", onchange = "FillProjectDetails(this);" })
                            </div>
                        </div>

                        <!-- / Project Details -->
                        <div class="form-group">
                            <label class="col-lg-3 control-label">Project Duration</label>
                            <div class="col-lg-4">
                                <input type="text" class="form-control m-b" id="PStartDate" name="PStartDate" readonly="readonly" />
                            </div>
                            <div class="col-lg-5">
                                <input type="text" class="form-control m-b" id="PEndDate" name="PEndDate" readonly="readonly" />
                            </div>
                        </div>

                        <!-- / Phase Name -->
                        <div class="form-group">
                            <label class="col-lg-3 control-label">Select Phase </label>
                            <div class="col-lg-9">
                                @Html.DropDownList("PhaseId", null, "Select Phase", htmlAttributes: new { @class = "form-control m-b", onchange = "FillPhaseDetails(this);" })
                            </div>
                        </div>

                            <!-- / Phase  Details -->
                        <div class="form-group">
                            <label class="col-lg-3 control-label">Phase Duration</label>
                            <div class="col-lg-4">
                                <input type="text" class="form-control m-b" id="PhStartDate" name="PhStartDate" readonly="readonly" />
                            </div>
                            <div class="col-lg-5">
                                <input type="text" class="form-control m-b" id="PhEndDate" name="PhEndDate" readonly="readonly" />
                            </div>
                        </div>

                        <!-- / Sub Phase  -->
                        <div class="form-group">
                            <label class="col-lg-3 control-label">Select Sub Phase </label>
                            <div class="col-lg-9">
                                @Html.DropDownList("SubPhaseId", null, "Select Sub Phase", htmlAttributes: new { @class = "form-control m-b" })
                            </div>
                        </div>


                        <!-- / Bucket Name -->
                        <div class="form-group">
                            <label class="col-lg-3 control-label">New Bucket Name</label>
                            <div class="col-lg-9">
                                @Html.TextBoxFor(model => model.Name, htmlAttributes: new { @class = "typeahead_1 form-control m-b" })
                            </div>
                        </div>

                    <!-- / Save Button -->
                        <div class="form-group">
                            <div class="col-lg-12">
                                <button class="btn btn-sm btn-primary pull-left m-t-n-xs" type="submit">
                                    <strong>Create</strong>
                                </button>

                                @Html.ActionLink("Back to List", "Index", null, htmlAttributes: new { @class = "btn btn-sm btn-primary pull-right m-t-n-xs" })
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>


<script type="text/javascript">

    $(document).ready(
    function () {
        
        $("#Name").typeahead({
            source: function (query, process) {
                var names = [];
                $.ajax({
                    type: "POST",
                    url: "@Url.Action("GetBucketNames", "Bucket")",
                    data: { query: query },                    
                    success: function (data) {
                        $.each(data, function (i, bname) {
                            /* alert(bname); */
                            names.push(bname);
                        });
                        process(names);
                    },
                    error: function (xerr) {
                        /* $('#txteng').val("err : " +xerr);*/
                    }
                });
            }
        });

        

        $("#frmMain").validate({
            rules: {
                Name: {
                    minlength: 3,
                    maxlength: 250,
                    required: true
                },
                ProjectId: { required: true },
                PhaseId: { required: true },
            },
            highlight: function (element) {
                $(element).closest('.control-group').addClass('has-error');
            },
            unhighlight: function (element) {
                $(element).closest('.control-group').removeClass('has-error');
            },
            submitHandler: function (form) { // for demo
                form.submit();
                return false;
            }
        });
    });


    function FillProjectDetails(obj) {
        var sel = obj.options[obj.selectedIndex].value;
        if (sel == "") { return; }

        var ListedPostedContent = { ProjectId: sel }
        $.ajax({
            type: "POST",
            url: "/Phase/GetProjectPhases",
            data: ListedPostedContent,
            success: function (message) {

                $("#PhaseId").empty();
                $('#PhaseId').append($('<option>', { value: '', text: 'Select Phase', selected: true }));
                var res = message.data;
                
                if (res.length > 0) {
                    for (var i = 0; i < message.data.length; i++) {
                        $('#PhaseId').append($('<option>', { value: message.data[i].PhaseId, text: message.data[i].PhaseName }));
                    } // end of for loop
                } // end of if for length
            },
            error: function (xerr) {
                /* $('#txteng').val("err : " +xerr);*/
            }
        });

        var postedContent = { SelectedProject : sel }
        $.ajax({
            type: "POST",
            url: "/Phase/GetProjectDates",
            data: postedContent,
            success: function (message) {
                var res = message.data;

                $("#PStartDate").empty()
                $("#PEndDate").empty()

                $("#PStartDate").val(parseJsonDate(res.StartDate));
                $("#PEndDate").val(parseJsonDate(res.EndDate));
            },
            error: function (xerr) {
                /* $('#txteng').val("err : " +xerr);*/
            }
        });

    }


    function FillPhaseDetails(obj) {
        var sel     = obj.options[obj.selectedIndex].value;
        var selText = obj.options[obj.selectedIndex].text;
        if (sel == "") { return; }

        var postedContent = { PhaseId: sel }
        $.ajax({
            type: "POST",
            url: "/SubPhase/GetSubPhase",
            data: postedContent,
            success: function (message) {

                $("#SubPhaseId").empty();
                $('#SubPhaseId').append($('<option>', { value: '', text: 'Select Sub Phase', selected: true }));
                var res = message.data;

                if (res.length > 0) {
                    for (var i = 0; i < message.data.length; i++) {
                        $('#SubPhaseId').append($('<option>', { value: message.data[i].SubPhaseId, text: message.data[i].SubPhaseName }));
                    } // end of for loop
                } // end of if for length
                else {
                    $('#SubPhaseId').append($('<option>', { value: '', text: "No Sub Phase For " + selText }));
                }
            },
            error: function (xerr) {
                /* $('#txteng').val("err : " +xerr);*/
            }
        });

        $.ajax({
            type: "POST",
            url: "/Phase/GetPhaseDates",
            data: postedContent,
            success: function (message) {

                var res = message.data;
                $("#PhStartDate").empty()
                $("#PhEndDate").empty()


                $("#PhStartDate").val(parseJsonDate(res.StartDate));
                $("#PhEndDate").val(parseJsonDate(res.EndDate));
            },
            error: function (xerr) {
                /* $('#txteng').val("err : " +xerr);*/
            }
        });
    }


    function parseJsonDate(jsonDateString) {
        var monthNames = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];

        jsonDateString = jsonDateString.replace('/Date(', '');
        jsonDateString = jsonDateString.replace(')/', '');
        var date = new Date(parseInt(jsonDateString));
        var day = date.getDate();
        var monthIndex = date.getMonth();
        var year = date.getFullYear();
        return day + "-" + monthNames[monthIndex] + "-" + year;
    }
</script>