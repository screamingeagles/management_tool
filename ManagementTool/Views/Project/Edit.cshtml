@model ManagementTool.Models.C004_PROJECT

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<br />

<div class="row">

    <div class="col-lg-10 col-lg-offset-1">
        <div class="ibox float-e-margins">
            <div class="ibox-title">
                <h5>Edit Project : @Model.ProjectName</h5>
                <div class="ibox-tools">
                    <a class="collapse-link">
                        <i class="fa fa-chevron-up"></i>
                    </a>
                    <a class="close-link">
                        <i class="fa fa-times"></i>
                    </a>
                </div>
            </div>
            <div class="ibox-content">
                <div class="table-responsive">
                    @using (Html.BeginForm("Edit", "Project", FormMethod.Post, new { id = "frmMain" }))
                    {
                        @Html.AntiForgeryToken();
                        @Html.HiddenFor(model => model.ProjectId)

                    <!-- / Division Name -->
                        <div class="form-group">
                            <label class="col-lg-3 control-label">Select Divison</label>
                            <div class="col-lg-9">
                                @Html.DropDownList("DivisionId", null, "Select Division", htmlAttributes: new { @class = "form-control m-b", onchange = "FillArea(this);" })
                            </div>
                        </div>

                    <!-- / Area Name -->
                        <div class="form-group">
                            <label class="col-lg-3 control-label">Select Area</label>
                            <div class="col-lg-9">
                                @Html.DropDownList("AreaId", null, "Select Area", htmlAttributes: new { @class = "form-control m-b", onchange = "FillSubArea(this);" })
                            </div>
                        </div>

                    <!-- / Sub Area Name -->
                        <div class="form-group">
                            <label class="col-lg-3 control-label">Select Sub Area</label>
                            <div class="col-lg-9">
                                @Html.DropDownList("SubAreaId", null, "Select Sub Area", htmlAttributes: new { @class = "form-control m-b" })
                            </div>
                        </div>

                    <!-- / Project Name -->
                        <div class="form-group">
                            <label class="col-lg-3 control-label">Project Name</label>
                            <div class="col-lg-9">
                                @Html.TextBoxFor(model => model.ProjectName, htmlAttributes: new { @class = "form-control m-b" })
                            </div>
                        </div>

                    <!-- / Start Date -->
                        <div class="form-group">
                            <label class="col-lg-3 control-label">Start Date</label>
                            <div class="col-lg-9">
                                @Html.TextBoxFor(model => model.StartDate, "{0:dd-MMM-yyyy}", htmlAttributes: new { @class = "form-control m-b" })
                            </div>
                        </div>

                    <!-- / End Date -->
                        <div class="form-group">
                            <label class="col-lg-3 control-label">End Date</label>
                            <div class="col-lg-9">
                                @Html.TextBoxFor(model => model.EndDate, "{0:dd-MMM-yyyy}", htmlAttributes: new { @class = "form-control m-b" })
                            </div>
                        </div>

                    <!-- / Select Project Type-->
                        <div class="form-group">
                            <label class="col-lg-3 control-label">Select Project Type</label>
                            <div class="col-lg-9">
                                @Html.DropDownList("ProjectType", null, "Select Project Type", htmlAttributes: new { @class = "form-control m-b" })                                
                            </div>
                        </div>

                    <!-- / Save Button -->
                        <div class="form-group">
                            <div class="col-lg-12">
                                <button class="btn btn-sm btn-primary pull-left m-t-n-xs" type="submit">
                                    <strong>Save</strong>
                                </button>

                                @Html.ActionLink("Back to List", "Index", null, htmlAttributes: new { @class = "btn btn-sm btn-primary pull-right m-t-n-xs" })
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    $(document).ready(
    function () {
        $('#StartDate').datepicker({
            changeMonth: true,
            changeYear: true,
            minDate: "-15w",
            dateFormat: "dd-M-yy" /*format: 'dd-M-yyyy'*/
        });

        $('#EndDate').datepicker({
            changeMonth: true,
            changeYear: true,
            numberOfMonths: 1,
            dateFormat: "dd-M-yy"
        });

        $("#frmMain").validate({
            rules: {
                ProjectName     : {
                    minlength: 3,
                    maxlength: 250,
                    required: true
                },
                DivisionId      : { required: true },
                AreaId          : { required: true },
                ProjectType     : { required: true },
                StartDate       : { required: true, date: true },
                EndDate         : { required: true, date: true },
            },
            highlight: function (element) {
                $(element).closest('.control-group').addClass('has-error');
            },
            unhighlight: function (element) {
                $(element).closest('.control-group').removeClass('has-error');
            },
            submitHandler: function (form) { // for demo
                form.submit();
                return false;
            }
        });
    });


    function FillArea       (obj) {
        var sel = obj.options[obj.selectedIndex].value;
        if (sel == "") { return; }

        var postedContent = { SelectedDivision: sel }
        $.ajax({
            type: "POST",
            url: "/Project/GetAreaByDivision",
            data: postedContent,
            success: function (message) {
                var res = message.data;
                $("#AreaId").empty()
                if (res.length > 0) {
                    for (var i = 0; i < message.data.length; i++) {
                        $('#AreaId').append($('<option>', { value: message.data[i].AreaId, text: message.data[i].AreaName }));
                    } // end of for loop
                } // end of if for length
            },
            error: function (xerr) {
                /* $('#txteng').val("err : " +xerr);*/
            }
        });

    }

    function FillSubArea    (obj) {
        var sel     = obj.options[obj.selectedIndex].value;
        var selText = obj.options[obj.selectedIndex].text
        if (sel == "") { return; }

        var postedContent = { SelectedArea: sel }
        $.ajax({
            type: "POST",
            url: "/Project/GetSubAreaByArea",
            data: postedContent,
            success: function (message) {
                var res = message.data;
                $("#SubAreaId").empty()
                if (res.length > 0) {
                    for (var i = 0; i < message.data.length; i++) {
                        $('#SubAreaId').append($('<option>', { value: message.data[i].SubAreaId, text: message.data[i].SubAreaName }));
                    } // end of for loop
                } // end of if for length
                else {
                    $('#SubAreaId').append($('<option>', { value: '', text: "No Sub Area For " + selText }));
                }
            },
            error: function (xerr) {
                /* $('#txteng').val("err : " +xerr);*/
            }
        });

    }
</script>
<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>C004_PROJECT</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ProjectId)

        <div class="form-group">
            @Html.LabelFor(model => model.DivisionId, "DivisionId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("DivisionId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.DivisionId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AreaId, "AreaId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("AreaId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.AreaId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SubAreaId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SubAreaId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SubAreaId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProjectName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProjectName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProjectName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProjectType, "ProjectType", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                
                @Html.ValidationMessageFor(model => model.ProjectType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
