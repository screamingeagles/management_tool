@model ManagementTool.Models.C004_PROJECT

@{
    int index = 1;
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<br />

<div class="row">

    <div class="col-lg-10 col-lg-offset-1">
        <div class="ibox float-e-margins">
            <div class="ibox-title">
                <h5>Edit Project : @Model.ProjectName</h5>
                <div class="ibox-tools">
                    <a class="collapse-link">
                        <i class="fa fa-chevron-up"></i>
                    </a>
                    <a class="close-link">
                        <i class="fa fa-times"></i>
                    </a>
                </div>
            </div>
            <div class="ibox-content">
                <div class="table-responsive">
                    @using (Html.BeginForm("Edit", "Project", FormMethod.Post, new { id = "frmMain" }))
                    {
                        @Html.AntiForgeryToken();
                        @Html.HiddenFor(model => model.ProjectId)

                    <!-- / Division Name -->
                        <div class="form-group">
                            <label class="col-lg-3 control-label">Select Divison</label>
                            <div class="col-lg-9">
                                @Html.DropDownList("DivisionId", null, "Select Division", htmlAttributes: new { @class = "form-control m-b", onchange = "FillArea(this);" })
                            </div>
                        </div>

                    <!-- / Area Name -->
                        <div class="form-group">
                            <label class="col-lg-3 control-label">Select Area</label>
                            <div class="col-lg-9">
                                @Html.DropDownList("AreaId", null, "Select Area", htmlAttributes: new { @class = "form-control m-b", onchange = "FillSubArea(this);" })
                            </div>
                        </div>

                    <!-- / Sub Area Name -->
                        <div class="form-group">
                            <label class="col-lg-3 control-label">Select Sub Area</label>
                            <div class="col-lg-9">
                                @Html.DropDownList("SubAreaId", null, "Select Sub Area", htmlAttributes: new { @class = "form-control m-b" })
                            </div>
                        </div>

                    <!-- / Project Name -->
                        <div class="form-group">
                            <label class="col-lg-3 control-label">Project Name</label>
                            <div class="col-lg-9">
                                @Html.TextBoxFor(model => model.ProjectName, htmlAttributes: new { @class = "form-control m-b" })
                            </div>
                        </div>

                    <!-- / Start Date -->
                        <div class="form-group">
                            <label class="col-lg-3 control-label">Start Date</label>
                            <div class="col-lg-9">
                                @Html.TextBoxFor(model => model.StartDate, "{0:dd-MMM-yyyy}", htmlAttributes: new { @class = "form-control m-b" })
                            </div>
                        </div>

                    <!-- / End Date -->
                        <div class="form-group">
                            <label class="col-lg-3 control-label">End Date</label>
                            <div class="col-lg-9">
                                @Html.TextBoxFor(model => model.EndDate, "{0:dd-MMM-yyyy}", htmlAttributes: new { @class = "form-control m-b" })
                            </div>
                        </div>

                    <!-- / Select Project Type-->
                        <div class="form-group">
                            <label class="col-lg-3 control-label">Select Project Type</label>
                            <div class="col-lg-9">
                                @Html.DropDownList("ProjectType", null, "Select Project Type", htmlAttributes: new { @class = "form-control m-b" })                                
                            </div>
                        </div>

                    <!-- / Save Button -->
                        <div class="form-group">
                            <div class="col-lg-12">
                                <button class="btn btn-sm btn-primary pull-left m-t-n-xs" type="submit">
                                    <strong>Save</strong>
                                </button>

                                @Html.ActionLink("Back to List", "Index", null, htmlAttributes: new { @class = "btn btn-sm btn-primary pull-right m-t-n-xs" })
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>


<div class="row">

    <div class="col-lg-6 col-lg-offset-1">
        <div class="ibox float-e-margins">
            <div class="ibox-title">
                <h5>Add Edit Files</h5>
                <div class="ibox-tools">
                    <a class="collapse-link">
                        <i class="fa fa-chevron-up"></i>
                    </a>
                    <a class="close-link">
                        <i class="fa fa-times"></i>
                    </a>
                </div>
            </div>
            <div class="ibox-content">
                <div class="table-responsive">
                    <div class="table-responsive">
                        <table class="table no-margin" id="tblattachedFiles">
                            <thead>
                                <tr style="vertical-align:top!important; text-align:center;">
                                    <th style="text-align:center; width:20%;"> S. No                          </th>
                                    <th style="text-align:center; width:70%;"> File Name                      </th>
                                    <th style="text-align:center; width:10%;"> Action                         </th>
                                </tr>
                            </thead>
                            <tbody>
                                @{
                                    index = 1;

                                    <tr style="font-size:9pt;">
                                        <td>@index</td>
                                        <td style="text-align:left;"><a href="@Url.Action("Download","Service", new { id = 1 })" style="text-decoration:none;">file name</a></td>
                                        <td style="text-align:left;">
                                            <form name='frmRemoveFile_@index' action='/technician/Service/Remove' onSubmit='return Confirm();' method='post'>
                                                <input type='hidden' name='id' value='@index'>
                                                <input type='submit' name='submit' value='remove' class='btn btn-sm btn-default btn-flat' />
                                            </form>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                            <tfoot>

                                @using (Html.BeginForm("AddFile", "Project", FormMethod.Post, new { id = "frmAddFile", enctype = "multipart/form-data" }))
                                {
                                    @Html.AntiForgeryToken();
                                    @Html.HiddenFor(model => model.ProjectId)
                                    <tr style="font-size:9pt;">
                                        <td><small class="label bg-green">add</small></td>
                                        <td style="text-align:left;">
                                            <div class="form-group">

                                                <div class="ibox-content">
                                                    <div class="fileinput input-group fileinput-new" data-provides="fileinput">
                                                        <div class="form-control" data-trigger="fileinput"><i class="glyphicon glyphicon-file fileinput-exists"></i> <span class="fileinput-filename"></span></div>
                                                        <span class="input-group-addon btn btn-default btn-file"><span class="fileinput-new">Select file</span><span class="fileinput-exists">Change</span><input type="hidden" value="" name="..."><input type="file" name=""></span>
                                                        <a href="#" class="input-group-addon btn btn-default fileinput-exists" data-dismiss="fileinput">Remove</a>
                                                    </div>
                                                    <p>
                                                        HTML markup code for abowe example:
                                                    </p>
                                                </div>

                                                <!--div class="btn btn-default btn-file">
                                                    <i class="fa fa-paperclip"></i> Attachment
                                                    <input type="file" name="attachment" id="attachment" onchange="GetFileName();">
                                                </div-->
                                                <!--p id="idFileAdd" class="help-block">Max. 2MB</p-->
                                            </div>
                                        </td>
                                        <td style="text-align:left;"><input type="submit" name="submit" value="Add File" class="btn btn-info pull-right" /></td>
                                    </tr>
                                }
                            </tfoot>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<script type="text/javascript">
    $(document).ready(
    function () {
        $('#StartDate').datepicker({
            changeMonth: true,
            changeYear: true,
            minDate: "-15w",
            dateFormat: "dd-M-yy" /*format: 'dd-M-yyyy'*/
        });

        $('#EndDate').datepicker({
            changeMonth: true,
            changeYear: true,
            numberOfMonths: 1,
            dateFormat: "dd-M-yy"
        });

        $("#frmMain").validate({
            rules: {
                ProjectName     : {
                    minlength: 3,
                    maxlength: 250,
                    required: true
                },
                DivisionId      : { required: true },
                AreaId          : { required: true },
                ProjectType     : { required: true },
                StartDate       : { required: true, date: true },
                EndDate         : { required: true, date: true },
            },
            highlight: function (element) {
                $(element).closest('.control-group').addClass('has-error');
            },
            unhighlight: function (element) {
                $(element).closest('.control-group').removeClass('has-error');
            },
            submitHandler: function (form) { // for demo
                form.submit();
                return false;
            }
        });
    });


    function FillArea       (obj) {
        var sel = obj.options[obj.selectedIndex].value;
        if (sel == "") { return; }

        var postedContent = { SelectedDivision: sel }
        $.ajax({
            type: "POST",
            url: "/Project/GetAreaByDivision",
            data: postedContent,
            success: function (message) {
                var res = message.data;
                $("#AreaId").empty()
                if (res.length > 0) {
                    for (var i = 0; i < message.data.length; i++) {
                        $('#AreaId').append($('<option>', { value: message.data[i].AreaId, text: message.data[i].AreaName }));
                    } // end of for loop
                } // end of if for length
            },
            error: function (xerr) {
                /* $('#txteng').val("err : " +xerr);*/
            }
        });

    }

    function FillSubArea    (obj) {
        var sel     = obj.options[obj.selectedIndex].value;
        var selText = obj.options[obj.selectedIndex].text
        if (sel == "") { return; }

        var postedContent = { SelectedArea: sel }
        $.ajax({
            type: "POST",
            url: "/Project/GetSubAreaByArea",
            data: postedContent,
            success: function (message) {
                var res = message.data;
                $("#SubAreaId").empty()
                if (res.length > 0) {
                    for (var i = 0; i < message.data.length; i++) {
                        $('#SubAreaId').append($('<option>', { value: message.data[i].SubAreaId, text: message.data[i].SubAreaName }));
                    } // end of for loop
                } // end of if for length
                else {
                    $('#SubAreaId').append($('<option>', { value: '', text: "No Sub Area For " + selText }));
                }
            },
            error: function (xerr) {
                /* $('#txteng').val("err : " +xerr);*/
            }
        });

    }
</script>
